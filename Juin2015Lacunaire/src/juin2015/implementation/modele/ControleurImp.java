/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juin2015.implementation.modele;

import juin2015.architecturemvc.EtatEmissions;
import juin2015.architecturemvc.Vue;

/**
 *
 * @author Tritan
 */
public class ControleurImp extends javax.swing.JPanel implements Vue{

    private ModeleImp model;
    /**
     * Creates new form ControleurImp
     */
    public ControleurImp(ModeleImp modele) {
        initComponents();
        jsNbEmetteur.setMajorTickSpacing(5);
        jsNbEmetteur.setMinorTickSpacing(1);
        jsNbEmetteur.setPaintLabels(true);
        jsNbEmetteur.setPaintTicks(true);
        jsAlea.setMajorTickSpacing(5);
        jsAlea.setMinorTickSpacing(1);
        jsAlea.setPaintLabels(true);
        jsAlea.setPaintTicks(true);
        jsDelai.setMajorTickSpacing(5);
        jsDelai.setMinorTickSpacing(1);
        jsDelai.setPaintLabels(true);
        jsDelai.setPaintTicks(true);
        jsDure.setMajorTickSpacing(5);
        jsDure.setMinorTickSpacing(1);
        jsDure.setPaintLabels(true);
        jsDure.setPaintTicks(true);
        model = modele;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jsDelai = new javax.swing.JSlider();
        jlNbEmetteur = new javax.swing.JLabel();
        jsNbEmetteur = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jsDuree = new javax.swing.JSlider();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jsAlea = new javax.swing.JSlider();
        jsDure = new javax.swing.JSlider();
        jbStart = new javax.swing.JButton();

        jsDelai.setMaximum(30);
        jsDelai.setValue(5);

        jlNbEmetteur.setText("Nombre(s) d'émetteur(s):");

        jsNbEmetteur.setMajorTickSpacing(5);
        jsNbEmetteur.setMaximum(30);
        jsNbEmetteur.setMinimum(5);
        jsNbEmetteur.setMinorTickSpacing(1);
        jsNbEmetteur.setValue(5);
        jsNbEmetteur.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jLabel1.setText("Durée en minute de l'observation:");

        jsDuree.setMaximum(30);
        jsDuree.setValue(5);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Pour chaque émetteur", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 1, 11))); // NOI18N

        jLabel3.setText("Delai minimum, en seconde , entre deux émissions :");

        jLabel4.setText("Mesure de l'aléa :");

        jsAlea.setMaximum(10);
        jsAlea.setValue(5);

        jsDure.setMajorTickSpacing(5);
        jsDure.setMaximum(30);
        jsDure.setMinorTickSpacing(1);
        jsDure.setValue(15);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsAlea, javax.swing.GroupLayout.DEFAULT_SIZE, 343, Short.MAX_VALUE)
                    .addComponent(jsDure, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jsDure, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jsAlea, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(88, Short.MAX_VALUE))
        );

        jbStart.setText("Start");
        jbStart.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbStartActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jsDuree, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jlNbEmetteur)
                            .addGap(73, 73, 73)
                            .addComponent(jsNbEmetteur, javax.swing.GroupLayout.PREFERRED_SIZE, 345, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addComponent(jbStart)))
                .addContainerGap(78, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jsNbEmetteur, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jlNbEmetteur))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jsDuree, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jbStart)
                .addContainerGap(16, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jbStartActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbStartActionPerformed
        System.out.println("Dans jbStartActionPerformed");
        if(/*model == null && */jbStart.getText() == "Start"){
            System.out.println("Je construit le model");
            int nbEmetteurs = jsNbEmetteur.getValue();
            int [] nbEmissions = new int[nbEmetteurs];
            int[] sommeIntensite = new int[nbEmetteurs];
            double [] moyenneIntensite = new double[nbEmetteurs];
            boolean actif = false;
            int derEmetteur = 0; 
            int nbEmissionTotal =0;
            double moyenneIntensiteTotal=0;
            int sommeIntensiteTotal=0;
            model = new ModeleImp(nbEmetteurs,nbEmissions, sommeIntensite,
                           moyenneIntensite, actif, derEmetteur, nbEmissionTotal, 
                           moyenneIntensiteTotal, sommeIntensiteTotal);
            model.addEmissionEcouteur(this);
        }
        if(!model.isActif()){
            System.out.println("Je lance startEmissions");
            System.out.println("nbEmetteur : "+ model.getEtat().getNbEmetteurs());
            System.out.println("delai : "+jsDelai.getValue() + "  alea : " + jsAlea.getValue() 
            + "jsDuree : " + jsDure.getValue());
            model.startEmissions(model.getEtat().getNbEmetteurs(), 
                    jsDelai.getValue(), jsAlea.getValue(), jsDure.getValue());
             System.out.println("Je change d'etat");
             //model.changeEtat(true);
        }else{
            System.out.println("Je stopEmissions");
            model.stopEmissions();
             System.out.println("Je change d'etat");
            //model.changeEtat(false);
        }
       
        
    }//GEN-LAST:event_jbStartActionPerformed
    public ModeleImp getModele(){
        return model;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JButton jbStart;
    private javax.swing.JLabel jlNbEmetteur;
    private javax.swing.JSlider jsAlea;
    private javax.swing.JSlider jsDelai;
    private javax.swing.JSlider jsDure;
    private javax.swing.JSlider jsDuree;
    private javax.swing.JSlider jsNbEmetteur;
    // End of variables declaration//GEN-END:variables

    @Override
    public synchronized void notifieChangement(EtatEmissions etat) {
        if(!etat.isActif()){
            jbStart.setText("Start");
        }else{
            jbStart.setText("Stop");
        }
        validate();
    }
}
