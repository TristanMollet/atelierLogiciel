/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package juin2015.implementation.modele;

import be.esi.alg2.gui.outils.MaJTableInitialisationException;
import java.awt.Component;
import java.awt.GridLayout;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JSlider;
import javax.swing.JWindow;
import juin2015.architecturemvc.EtatEmissions;
import juin2015.architecturemvc.Vue;
import juin2015.db.ParametresDB;
import juin2015.dto.ParametresDto;

/**
 *
 * @author Tritan
 */
public class Fenetre extends javax.swing.JFrame implements Vue{

    private ModeleImp model;
    /**
     * Creates new form Fenetre
     */
    public Fenetre() {
        initComponents();
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        rbControleur.setSelected(false);
        jCheckBoxMenuItem1.setSelected(false);
        vueEmet.setSelected(false);
        model=new ModeleImp();
        model.addEmissionEcouteur(this);
        vueEmetteur = new VueEmetteur(model);
        vueSynthese = new VueSynthese(model);
        try {
            jdRech = new JDRechParametres(this, rootPaneCheckingEnabled, "Recherche",
                    new JPCritSelParametres(), new MaJTParametres());
        } catch (be.esi.alg2.ebiblio.gui.outils.MaJTableInitialisationException ex) {
            Logger.getLogger(Fenetre.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        rbControleur = new javax.swing.JRadioButtonMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        vueEmet = new javax.swing.JCheckBoxMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jmrecherche = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        jMenu3.setText("jMenu3");

        jMenuItem3.setText("jMenuItem3");

        jMenu4.setText("jMenu4");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jMenu2.setText("Menu");

        rbControleur.setSelected(true);
        rbControleur.setText("Controleur");
        rbControleur.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rbControleurActionPerformed(evt);
            }
        });
        jMenu2.add(rbControleur);

        jMenuBar1.add(jMenu2);

        jMenu1.setText("Vue");

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("Synthese");
        jCheckBoxMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jCheckBoxMenuItem1);

        vueEmet.setSelected(true);
        vueEmet.setText("Emetteurs");
        vueEmet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vueEmetActionPerformed(evt);
            }
        });
        jMenu1.add(vueEmet);

        jMenuBar1.add(jMenu1);

        jMenu5.setText("Sauvegarde");

        jMenuItem2.setText("Sauvegarde");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jmrecherche.setText("Recherche");
        jmrecherche.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmrechercheActionPerformed(evt);
            }
        });
        jMenu5.add(jmrecherche);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void rbControleurActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rbControleurActionPerformed
        if(evt.getSource()== rbControleur){
            if(rbControleur.isSelected()){
                if(contrleur == null){
                    //On contruit le controleur
                    contrleur = new ControleurImp(model);
                    //Recuperation du model construit
                   // model = contrleur.getModele();
                   // vueSynthese = new VueSynthese(this.model);
                    
                }
                setContentPane(contrleur);
                contrleur.setVisible(true);
                validate();
            }else{
                if(contrleur != null){
                contrleur.setVisible(false);
                validate();
                }
            }
            pack();
        }
        
    }//GEN-LAST:event_rbControleurActionPerformed
public ControleurImp getControleur(){
    return contrleur;
}
    private void jCheckBoxMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxMenuItem1ActionPerformed
       if(vueSynthese == null){
        vueSynthese = new VueSynthese(model);
        }
        /*
        if(jCheckBoxMenuItem1.isSelected()){
        vueSynthese.setVisible(true);
        }else{
        vueSynthese.setVisible(false);
        }*/
        JFrame vueSyn = new JFrame("Vue de SynthÃ¨se");
        vueSyn.getContentPane().add(vueSynthese);
        vueSyn.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        vueSyn.setVisible(true);
        vueSyn.pack();
        
    }//GEN-LAST:event_jCheckBoxMenuItem1ActionPerformed

    private void vueEmetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vueEmetActionPerformed
        if(vueEmetteur == null){
            vueEmetteur = new VueEmetteur(model);
        }
        JFrame vueEmet = new JFrame("Emetteur");
        vueEmet.getContentPane().add(vueEmetteur);
        vueEmet.setDefaultCloseOperation(JFrame.HIDE_ON_CLOSE);
        vueEmet.setVisible(true);
        vueEmet.pack();
    }//GEN-LAST:event_vueEmetActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        //sauvegarde.setVisible(true);
        String UserReponse = (String) JOptionPane.showInputDialog(this,
                "Nom de la sauvegarde : ","Sauvegarde", JOptionPane.PLAIN_MESSAGE);
       EtatEmissions et = model.getEtat();
       ParametresDto paramDto = new ParametresDto(UserReponse, 
               contrleur.getNbEmetteurs(), contrleur.getDuree(),
               contrleur.getDelai(), contrleur.getAlea());
       ParametresDB.addParametre(paramDto);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmrechercheActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmrechercheActionPerformed
       jdRech.setVisible(true);
    }//GEN-LAST:event_jmrechercheActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        /* Create and display the form*/ 
        java.awt.EventQueue.invokeLater(() -> {
            new Fenetre().setVisible(true);
        });
        
    }
private JDRechParametres jdRech;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jmrecherche;
    private javax.swing.JRadioButtonMenuItem rbControleur;
    private javax.swing.JCheckBoxMenuItem vueEmet;
    // End of variables declaration//GEN-END:variables
private ControleurImp contrleur;
private VueSynthese vueSynthese;
private VueEmetteur vueEmetteur;

    @Override
    public void notifieChangement(EtatEmissions etat) {
        validate();
        System.out.println("nbEmetteur dans fenetre"+etat.getNbEmetteurs());
    }

}
